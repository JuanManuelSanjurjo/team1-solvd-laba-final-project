name: Deploy to Magalu VM

on:
  workflow_run:
    workflows: ["Run Lint, Build, Tests and Enforce Coverage"]
    types:
      - completed
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build image with NEXT_PUBLIC_* build args
      - name: Build Docker image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ vars.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }} \
            --build-arg NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_WEBSITE_NAME=${{ vars.NEXT_PUBLIC_WEBSITE_NAME }} \
            -t ${{ secrets.DOCKER_USERNAME }}/shoes-shop:latest .

      # Push image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/shoes-shop:latest

      # Deploy on Magalu VM
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.MAGALU_HOST }}
          username: ${{ secrets.MAGALU_USER }}
          key: ${{ secrets.MAGALU_SSH_KEY }}
          script: |
            cd ~/projects/shoes-shop
            cat > .env <<EOF
            DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/shoes-shop:latest
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }}
            AUTH_TRUST_HOST=${{ vars.AUTH_TRUST_HOST }}
            GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
            GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}
            EOF

            docker pull ${{ secrets.DOCKER_USERNAME }}/shoes-shop:latest

            docker compose pull app
            docker compose up -d
